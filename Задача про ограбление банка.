def subset_sum(target, numbers):
    n = len(numbers)
    dp = [[False] * (target + 1) for _ in range(n + 1)]

    # Инициализация базового случая
    for i in range(n + 1):
        dp[i][0] = True

    for i in range(1, n + 1):
        for j in range(1, target + 1):
            if numbers[i-1] > j:
                dp[i][j] = dp[i-1][j]
            else:
                dp[i][j] = dp[i-1][j] or dp[i-1][j-numbers[i-1]]

    if dp[n][target]:
        # Если возможно достичь заданной суммы
        subset = []
        i, j = n, target
        while i > 0 and j > 0:
            if dp[i-1][j]:
                i -= 1
            else:
                subset.append(numbers[i-1])
                j -= numbers[i-1]
                i -= 1

        return len(subset), subset[::-1]  # Возвращаем количество купюр и их номиналы (в обратном порядке)

    return -1  # Возвращаем -1, если заданная сумма недостижима


# Чтение входных данных
n, m = map(int, input().split())
nominals = list(map(int, input().split()))

# Вызов функции и вывод результата
result = subset_sum(n, nominals)
if result == -1:
    print(-1)
else:
    print(result[0])
    print(*result[1])
